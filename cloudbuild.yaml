steps:
# 1. Identify changed services
- name: 'gcr.io/cloud-builders/git'
  id: 'detect-changes'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    # Get the list of changed files from the last commit
    git fetch origin master
    CHANGED_FILES=$(git diff --name-only origin/master HEAD)
    echo "Changed files: $CHANGED_FILES"

    # Check each microservice directory for changes
    for SERVICE_DIR in microservices/*/; do
      SERVICE_NAME=$(basename $SERVICE_DIR)
      if echo "$CHANGED_FILES" | grep -q "^microservices/$SERVICE_NAME/"; then
        echo "Changes detected in $SERVICE_NAME, marking for build."
        # Create a flag file to mark that this service needs to be built
        touch "/workspace/$SERVICE_NAME.build_flag"
      fi
    done

# 2. Dynamically build and deploy each changed service
# This step will be repeated for each service, using the flag file as a condition

# --- Example for orion-sec-fetcher ---
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'deploy-sec-fetcher'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    if [ -f "/workspace/orion-sec-fetcher.build_flag" ]; then
      echo "Deploying orion-sec-fetcher..."
      gcloud run deploy orion-sec-fetcher \
        --source=./microservices/orion-sec-fetcher/ \
        --region=asia-northeast1 \
        --service-account=orion-service-account@$PROJECT_ID.iam.gserviceaccount.com \
        --no-allow-unauthenticated \
        --set-env-vars=GCP_PROJECT=$PROJECT_ID
    else
      echo "No changes in orion-sec-fetcher, skipping deployment."
    fi

# --- Example for orion-news-fetcher ---
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'deploy-news-fetcher'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    if [ -f "/workspace/orion-news-fetcher.build_flag" ]; then
      echo "Deploying orion-news-fetcher..."
      gcloud functions deploy orion-news-fetcher \
        --gen2 \
        --runtime=python312 \
        --source=./microservices/orion-news-fetcher/ \
        --entry-point=news_fetcher_http \
        --trigger-http \
        --no-allow-unauthenticated \
        --region=asia-northeast1 \
        --service-account=orion-service-account@$PROJECT_ID.iam.gserviceaccount.com \
        --set-env-vars=GCP_PROJECT=$PROJECT_ID,MARKET_DATA_API_KEY=d31obppr01qsprr1t6cgd31obppr01qsprr1t6d0
    else
      echo "No changes in orion-news-fetcher, skipping deployment."
    fi

# ... Add similar deployment steps for all other services ...
